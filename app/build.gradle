plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlinx.kover'
}

android {
    namespace 'com.example.coveragetestapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.coveragetestapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.9.2'
    testImplementation 'androidx.test.ext:junit:1.1.5'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:core-ktx:1.5.0'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'

    debugImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    debugImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
    debugImplementation 'androidx.test:core-ktx:1.5.0'
}

koverReport {
    // filters for all reports in all variants
    filters {
        excludes {
            // excludes class by fully-qualified JVM class name, wildcards '*' and '?' are available
            classes(
                // Build
                "*.BuildConfig",

                // Design and Android
                "*.components.*",
                "*.databinding.*",
                "*GraphAppDirections\$*", // Generated by navigation library
                "*GraphAppDirections", // Generated by navigation library
                "*FragmentDirections\$*", // Generated by navigation library
                "*FragmentDirections", // Generated by navigation library
                "*FragmentArgs\$*", // Generated by navigation library
                "*FragmentArgs", // Generated by navigation library
                "*App\$*",

                // App excludes
                "*.testutils.*"
                // Core excludes
                // FeatureX excludes
            )
        }
    }

    androidReports("debug") {
        verify {
            rule {
                // specify verification bound for this rule
                bound {
                    // lower bound
                    minValue = 98

                    // upper bound
                    maxValue = 99

                    // specify which units to measure coverage for
                    metric = kotlinx.kover.gradle.plugin.dsl.MetricType.LINE

                    // specify an aggregating function to obtain a single value that will be checked against the lower and upper boundaries
                    aggregation = kotlinx.kover.gradle.plugin.dsl.AggregationType.COVERED_PERCENTAGE
                }
            }
        }
    }
}